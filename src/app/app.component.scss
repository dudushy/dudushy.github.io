@import "../styles.scss";

:host {
  --headerGradient: none;
  --contentGradient: none;
  --footerGradient: none;
  --mainGradient: linear-gradient(180deg, #77410f, #77410f, #641788, #641788);
}

main {
  position: relative;
  @include fixedHeight(100%);
  @include fixedWidth(100%);
  display: flex;
  flex-direction: column;
  overflow-x: hidden;
  scroll-behavior: smooth;

  @include portrait {
    &:before {
      content: "portrait not ready";
      position: absolute;
      inset: 0;
      // top: 0;
      // left: 0;
      z-index: 1;
      background: black;
      color: white;
      display: flex;
      align-items: center;
      justify-content: center;
    }
  }
}

#main-background {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  @include square(calc(var(--responsiveUnit) * 200));
  background: var(--mainGradient);
  z-index: -1;
  @include allVendors(animation, 50s spin linear infinite);

  @keyframes spin {
    to {
      transform: translate(-50%, -50%) rotate(360deg);
    }
  }
}

#main-content {
  @include fixedWidth(100%);
  min-height: unset;
  // background: var(--contentGradient);
  // background: red;

  router-outlet {
    display: none;
  }
}

footer {
  position: relative;
  // background: var(--footerGradient);
  // background: white;
  // background: transparentize($color: $black, $amount: 0.4);
  background: lighten($color: $black, $amount: 6%);
  @include fixedWidth(100%);
  @include fixedHeight(var(--footerHeight));
  // overflow: hidden;
  // backdrop-filter: blur(calc(var(--responsiveUnit) * 0.4));
  // border-top: calc(var(--responsiveUnit) * 0.05) solid transparentize($color: $white, $amount: 0.2);

  &,
  * {
    @include allVendors(user-select, none);
  }

  .start {
    --animationDuration: 0.2s;
    --startSize: calc(var(--responsiveUnit) * 22.5);
    --startMoreWidth: calc(var(--startSize) * 0.1);
    // --startMoreWidth: 10%;
    --startAboutWidth: calc(var(--startSize) * 0.45);
    // --startAboutWidth: 45%;
    --startKnowledgeWidth: calc(var(--startSize) * 0.45);
    // --startKnowledgeWidth: 45%;

    position: absolute;
    // height: var(--startSize);
    width: var(--startSize);
    // background: royalblue;
    bottom: var(--footerHeight);
    @include allVendors(transition, 0.2s ease-in);
    overflow: hidden;
    // opacity: 0;

    .startMore,
    .startAbout,
    .startKnowledge {
      height: 0;
      width: 0;
    }

    &.expanded {
      // height: var(--startSize);
      animation: StartExpand var(--animationDuration) ease forwards;
      // opacity: 1;
      background: lighten($color: $black, $amount: 6%);

      .startMore {
        height: 100%;
        width: var(--startMoreWidth);
        background: lighten($color: $black, $amount: 12%);

        &:hover {
          background: lighten($color: $black, $amount: 18%);
          box-shadow: 0 0 calc(var(--responsiveUnit) * 0.4) calc(var(--responsiveUnit) * 0.1)
            lighten($color: $black, $amount: 4%);
        }
      }

      .startAbout {
        height: 100%;
        width: var(--startAboutWidth);
        background: lighten($color: $black, $amount: 12%);
        // background: green;
      }

      .startKnowledge {
        height: 100%;
        width: var(--startKnowledgeWidth);
        // background: lighten($color: $black, $amount: 12%);
        background: yellow;
      }
    }

    &.collapsed {
      // height: 0;
      animation: StartCollapse var(--animationDuration) ease forwards;

      .startMore,
      .startAbout,
      .startKnowledge {
        height: 0;
        width: 0;
      }
    }

    .startMore {
      position: absolute;
      bottom: 0;
      left: 0;
      z-index: 1;
      // background: red;
      // height: 100%;
      // width: var(--startMoreWidth);
      display: flex;
      flex-direction: column;
      justify-content: space-between;

      &,
      * {
        @include allVendors(transition, 0.2s ease-in-out);
      }

      .startMore-item {
        // background: white;
        display: flex;
        align-items: center;
        justify-content: flex-start;
        // width: 100%;
        color: $light;

        &:hover {
          background: darken($color: $medium, $amount: 30%);
          cursor: pointer;
        }

        .startMore-item_icon {
          display: flex;
          align-items: center;
          justify-content: center;
          // width: 100%;
          @include fixedWidth(var(--startMoreWidth));
          // background: blue;
          height: calc(var(--responsiveUnit) * 2);

          i {
            font-size: calc(var(--responsiveUnit) * 1.3);
          }
        }

        .startMore-item_text {
          overflow: hidden;
          width: 0;
          white-space: nowrap;
          font-size: calc(var(--responsiveUnit) * 0.8);
          font-family: sans-serif;
        }
      }

      &:hover {
        width: calc(var(--startMoreWidth) * 4);

        .startMore-item {
          .startMore-item_text {
            width: inherit;
          }
        }
      }
    }

    .startAbout {
      --startAboutScrollbarWidth: calc(var(--responsiveUnit) * 0.25);

      position: absolute;
      bottom: 0;
      left: var(--startMoreWidth);
      overflow-y: auto;

      &,
      * {
        @include allVendors(transition, 0.1s ease-out);
      }

      & {
        scrollbar-width: var(--startAboutScrollbarWidth);
        scrollbar-color: $light lighten($color: $black, $amount: 12%);
      }

      &::-webkit-scrollbar {
        width: var(--startAboutScrollbarWidth);
      }

      &::-webkit-scrollbar-track {
        background: lighten($color: $black, $amount: 12%);
      }

      &::-webkit-scrollbar-thumb {
        background-color: $light;
        border-radius: calc(var(--responsiveUnit) * 0.2);
        border: calc(var(--responsiveUnit) * 0.1) solid lighten($color: $black, $amount: 12%);
      }

      .startAbout-list {
        display: flex;
        flex-direction: column;

        .startAbout-list_title,
        .startAbout-list_item {
          width: 98%;

          &:hover {
            background: darken($color: $medium, $amount: 30%);
            cursor: pointer;
          }
        }

        .startAbout-list_title {
          font-size: calc(var(--responsiveUnit) * 0.7);
          font-weight: bold;
          font-family: sans-serif;
          color: $light;
          padding: calc(var(--responsiveUnit) * 0.2);

          &:first-child {
            padding-top: calc(var(--responsiveUnit) * 0.4);
          }
        }

        .startAbout-list_item {
          display: flex;
          align-items: center;
          justify-content: flex-start;
          padding: calc(var(--responsiveUnit) * 0.2);

          .startAbout-list_item_icon {
            font-size: calc(var(--responsiveUnit) * 0.6);
            color: var(--startAboutIconColor);
            margin-right: calc(var(--responsiveUnit) * 0.2);
          }

          .startAbout-list_item_text {
            font-size: calc(var(--responsiveUnit) * 0.6);
            font-family: sans-serif;
            color: $light;
          }
        }
      }
    }

    .startKnowledge {
      --startKnowledgeScrollbarWidth: calc(var(--responsiveUnit) * 0.25);

      position: absolute;
      bottom: 0;
      left: calc(var(--startMoreWidth) + var(--startAboutWidth));
      overflow-y: auto;

      &,
      * {
        @include allVendors(transition, 0.1s ease-out);
      }

      & {
        scrollbar-width: var(--startKnowledgeScrollbarWidth);
        scrollbar-color: $light lighten($color: $black, $amount: 12%);
      }

      &::-webkit-scrollbar {
        width: var(--startKnowledgeScrollbarWidth);
      }

      &::-webkit-scrollbar-track {
        background: lighten($color: $black, $amount: 12%);
      }

      &::-webkit-scrollbar-thumb {
        background-color: $light;
        border-radius: calc(var(--responsiveUnit) * 0.2);
        border: calc(var(--responsiveUnit) * 0.1) solid lighten($color: $black, $amount: 12%);
      }
    }
  }

  .taskbar {
    --taskbarStartWidth: 4%;
    --taskbarMiddleWidth: 88%;
    --taskbarEndWidth: 8%;

    // @include fixedWidth(100%);
    width: 100%;
    // @include fixedHeight(100%);
    height: 100%;
    display: flex;
    // justify-content: space-between;
    align-items: center;

    .taskbarStart,
    .taskbarMiddle,
    .taskbarEnd {
      height: 100%;

      &,
      * {
        @include allVendors(transition, 0.2s ease-out);
      }
    }

    .taskbarStart {
      width: var(--taskbarStartWidth);
      // background: yellow;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;

      i {
        font-size: calc(var(--responsiveUnit) * 1.2);
        // color: green;
        color: $white;
      }

      &:hover, &.expanded {
        background: lighten($color: $black, $amount: 12%);

        i {
          // color: $medium;
          filter: brightness(0.6);
        }
      }

      &:active {
        background: lighten($color: $black, $amount: 10%);

        i {
          // color: darken($color: $medium, $amount: 20%);
          filter: brightness(0.2);
        }
      }
    }

    .taskbarMiddle {
      width: var(--taskbarMiddleWidth);
      // background: purple;
      display: flex;
      align-items: center;
      justify-content: flex-start;

      .taskbarMiddle-icon {
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        width: calc(var(--responsiveUnit) * 2.5);
        margin-left: calc(var(--responsiveUnit) * 0.1);
        // background: orange;

        i {
          font-size: calc(var(--responsiveUnit) * 1.2);
          color: var(--networkColor);
        }

        &:hover {
          background: lighten($color: $black, $amount: 12%);

          i {
            // color: $medium;
            // color: color-mix(in srgb, var(--networkColor), $black 80%);
            filter: brightness(0.6);
          }
        }

        &:active {
          background: lighten($color: $black, $amount: 10%);

          i {
            // color: darken($color: $medium, $amount: 20%);
            filter: brightness(0.2);
          }
        }
      }
    }

    .taskbarEnd {
      --srcWidth: 20%;
      --clockWidth: 80%;

      width: var(--taskbarEndWidth);
      // background: blue;
      display: flex;
      align-items: center;
      justify-content: flex-end;

      .taskbarEnd-src,
      .taskbarEnd-clock {
        height: 100%;

        &:hover {
          background: lighten($color: $black, $amount: 12%);
          // color: $medium;
        }

        &:active {
          background: lighten($color: $black, $amount: 24%);
        }
      }

      .taskbarEnd-src {
        width: var(--srcWidth);
        height: 100%;
        // background: royalblue;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: calc(var(--responsiveUnit) * 0.4);
        font-weight: bold;
        text-decoration: none;
      }

      .taskbarEnd-clock {
        width: var(--clockWidth);
        height: 100%;
        // background: brown;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        // justify-content: space-evenly;
        color: white;
        font-family: sans-serif;

        .taskbarEnd-clock_time,
        .taskbarEnd-clock_date {
          height: 50%;
          white-space: nowrap;
          // overflow: hidden;
          display: flex;
          justify-content: center;
          // align-items: center;
          align-items: flex-end;
        }

        .taskbarEnd-clock_time {
          font-size: calc(var(--responsiveUnit) * 0.7);
          // align-items: flex-end;
        }

        .taskbarEnd-clock_date {
          font-size: calc(var(--responsiveUnit) * 0.65);
          // align-items: flex-start;
        }
      }
    }
  }
}

@keyframes StartExpand {
  from {
    height: 0;
  }
  to {
    height: var(--startSize);
  }
}

@keyframes StartCollapse {
  from {
    height: var(--startSize);
  }
  to {
    height: 0;
  }
}
